{
    "id": 14946,
    "citation_title": "Half a Century of Public Software Institutions: Open Source as a Solution to Hold-Up Problem",
    "citation_author": [
        "Michael Schwarz",
        "Yuri Takhteyev"
    ],
    "citation_publication_date": "2009-05-07",
    "issue_date": "2009-05-07",
    "revision_date": "None",
    "topics": [
        "\n",
        "Microeconomics",
        "\n",
        "Market Structure and Distribution",
        "\n",
        "Welfare and Collective Choice",
        "\n",
        "Public Economics",
        "\n",
        "Public Goods",
        "\n",
        "Industrial Organization",
        "\n",
        "Market Structure and Firm Performance",
        "\n",
        "Nonprofits",
        "\n",
        "History",
        "\n",
        "Other History",
        "\n",
        "Development and Growth",
        "\n",
        "Innovation and R&D",
        "\n",
        "Growth and Productivity",
        "\n"
    ],
    "program": [
        "\n",
        "Industrial Organization",
        "\n",
        "Public Economics",
        "\n",
        "Productivity, Innovation, and Entrepreneurship",
        "\n"
    ],
    "projects": null,
    "working_groups": null,
    "abstract": "\n\nWe argue that the intrinsic inefficiency of proprietary software has historically created a space for alternative institutions that provide software as a public good. We discuss several sources of such inefficiency, focusing on one that has not been described in the literature: the underinvestment due to fear of holdup. An inefficient holdup occurs when a user of software must make complementary investments, when the return on such investments depends on future cooperation of the software vendor, and when contracting about a future relationship with the software vendor is not feasible. We also consider how the nature of the production function of software makes software cheaper to develop when the code is open to the end users. Our framework explains why open source dominates certain sectors of the software industry (e.g., the top ten programming languages all have an open source implementation), while being almost none existent in some other sectors (none of the top ten computer games are open source). We then use our discussion of efficiency to examine the history of institutions for provision of public software from the early collaborative projects of the 1950s to the modern \"open source\" software institutions. We look at how such institutions have created a sustainable coalition for provision of software as a public good by organizing diverse individual incentives, both altruistic and profit-seeking, providing open source products of tremendous commercial importance, which have come to dominate certain segments of the software industry.\n\n",
    "acknowledgement": "\nWe are grateful to Jacques Cr\u00e9mer, Ara Keys, Paul Laskowski, Luisa Schwartzman, Marshall Van Alstyne and Rajesh Veeraraghavan for comments and suggestions. We also would like to thank for comments seminar participants at CMU, Microsoft Research and Fifth bi-annual conference on the Economics of the Software and Internet Industries.  The views expressed herein are those of the author(s) and do not necessarily reflect the views of the National Bureau of Economic Research.\n\n\n"
}